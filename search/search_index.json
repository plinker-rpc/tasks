{
    "docs": [
        {
            "location": "/", 
            "text": "Tasks\n\n\nThe tasks component allows you to write code based tasks which are completed by a daemon, \nthis could allow you to create a single interface to control a cluster of servers tasks.\n\n\nInstall\n\n\nRequire this package with composer using the following command:\n\n\n$ composer require plinker/tasks\n\n\n\n\n\nCRON Daemon\n\n\nYou should create a file which will be run via cron:\n\n\ncron.php\n\n\n?php\n\n\nrequire\n \nvendor/autoload.php\n;\n\n\n\nif\n \n(\nphp_sapi_name\n()\n \n!=\n \ncli\n)\n \n{\n\n    \nheader\n(\nHTTP/1.0 403 Forbidden\n);\n\n    \nexit\n(\nCLI script\n);\n\n\n}\n\n\n\n$task\n \n=\n \nnew\n \nPlinker\\Tasks\\Runner\n([\n\n    \ndatabase\n \n=\n \n[\n\n        \ndsn\n      \n=\n \nsqlite:./.plinker/database.db\n,\n\n        \nhost\n     \n=\n \n,\n\n        \nname\n     \n=\n \n,\n\n        \nusername\n \n=\n \n,\n\n        \npassword\n \n=\n \n,\n\n        \nfreeze\n   \n=\n \nfalse\n,\n\n        \ndebug\n    \n=\n \nfalse\n\n    \n],\n\n    \ndebug\n       \n=\n \ntrue\n,\n\n    \nlog\n         \n=\n \ntrue\n,\n\n    \nsleep_time\n  \n=\n \n2\n,\n\n    \ntmp_path\n    \n=\n \n./.plinker\n,\n\n    \nauto_update\n \n=\n \n86400\n\n\n]);\n\n\n\n$task\n-\ndaemon\n(\nQueue\n);\n\n\n\n\n\n\nThen add a cron job:\n\n\n\n\n@reboot while sleep 1; do cd /var/www/html/examples/tasks \n /usr/bin/php run.php ; done\n\n\n\n\nClient\n\n\nCreating a client instance is done as follows:\n\n\n?php\n\n\nrequire\n \nvendor/autoload.php\n;\n\n\n\n/**\n\n\n * Initialize plinker client.\n\n\n *\n\n\n * @param string $server - URL to server listener.\n\n\n * @param string $config - server secret, and/or a additional component data\n\n\n */\n\n\n$client\n \n=\n \nnew\n \n\\Plinker\\Core\\Client\n(\n\n    \nhttp://example.com/server.php\n,\n\n    \n[\n\n        \nsecret\n \n=\n \na secret password\n,\n\n        \n// database connection\n\n        \ndatabase\n \n=\n \n[\n\n            \ndsn\n      \n=\n \nsqlite:./.plinker/database.db\n,\n\n            \nhost\n     \n=\n \n,\n\n            \nname\n     \n=\n \n,\n\n            \nusername\n \n=\n \n,\n\n            \npassword\n \n=\n \n,\n\n            \nfreeze\n   \n=\n \nfalse\n,\n\n            \ndebug\n    \n=\n \nfalse\n,\n\n        \n],\n\n        \n// displays output to task runner console\n\n        \ndebug\n \n=\n \ntrue\n,\n\n\n        \n// daemon sleep time\n\n        \nsleep_time\n \n=\n \n1\n,\n\n        \ntmp_path\n   \n=\n \n./.plinker\n\n    \n]\n\n\n);\n\n\n\n// or using global function\n\n\n$client\n \n=\n \nplinker_client\n(\nhttp://example.com/server.php\n,\n \na secret password\n,\n \n[\n\n    \n// database connection\n\n    \ndatabase\n \n=\n \n[\n\n        \ndsn\n      \n=\n \nsqlite:./.plinker/database.db\n,\n\n        \nhost\n     \n=\n \n,\n\n        \nname\n     \n=\n \n,\n\n        \nusername\n \n=\n \n,\n\n        \npassword\n \n=\n \n,\n\n        \nfreeze\n   \n=\n \nfalse\n,\n\n        \ndebug\n    \n=\n \nfalse\n,\n\n    \n],\n\n    \n// displays output to task runner console\n\n    \ndebug\n \n=\n \ntrue\n,\n\n\n    \n// daemon sleep time\n\n    \nsleep_time\n \n=\n \n1\n,\n\n    \ntmp_path\n   \n=\n \n./.plinker\n\n\n]);\n\n\n\n\n\n\nMethods\n\n\nOnce setup, you call the class though its namespace to its method.\n\n\nCreate\n\n\nCreate a new task, tasks with the same name will be overwritten.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nName of task\n\n\n\n\n\n\n\n\nsource\n\n\nstring\n\n\nTask source code\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\nType of task (php|bash)\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\nDescription of task\n\n\n\n\n\n\n\n\nparams\n\n\narray\n\n\nDefault params passed to task\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\ntasks-\ncreate(\n\n\n    \nHello World\n,\n\n\n    \n?php\n \necho\n \nHello World\n;\n,\n\n\n    \nphp\n,\n\n\n    \nMy\n \nHello\n \nWorld\n \ntask\n,\n\n    \n[]\n\n\n)\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [id] =\n 1\n    [name] =\n Hello World\n    [source] =\n  cda22aa1e43992c1103a9f8a386b5dcb\n    [type] =\n php\n    [description] =\n My Hello World task\n    [params] =\n \n    [updated] =\n 2018-01-01 00:00:00\n    [created] =\n 2018-01-01 00:00:00\n)\n\n\n\n\n\nUpdate\n\n\nUpdate a task.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nId of task\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nName of task\n\n\n\n\n\n\n\n\nsource\n\n\nstring\n\n\nTask source code\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\nType of task (php|bash)\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\nDescription of task\n\n\n\n\n\n\n\n\nparams\n\n\narray\n\n\nDefault params passed to task\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\ntasks-\nupdate(\n\n\n    1\n\n\n    \nHello World\n,\n\n\n    \n?php\n \necho\n \nHello World - Updated\n;\n,\n\n\n    \nphp\n,\n\n\n    \nMy\n \nHello\n \nWorld\n \ntask\n,\n\n    \n[]\n\n\n)\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [id] =\n 1\n    [name] =\n Hello World - Updated\n    [source] =\n  cda22aa1e43992c1103a9f8a386b5dcb\n    [type] =\n php\n    [description] =\n My Hello World task\n    [params] =\n \n    [updated] =\n 2018-01-01 00:00:00\n    [created] =\n 2018-01-01 00:00:00\n)\n\n\n\n\n\nGet\n\n\nGet a task.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nName of task\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\ntasks-\nget(\nHello World\n);\n\n\n\n\n\n\nResponse (RedBean Object)\n\n\nRedBeanPHP\\OODBBean Object\n(\n    [properties:protected] =\n Array\n        (\n            [id] =\n 1\n            [name] =\n Hello World\n            [source] =\n  cda22aa1e43992c1103a9f8a386b5dcb\n            [type] =\n php\n            [description] =\n My Hello World task\n            [params] =\n \n            [updated] =\n 2018-01-01 00:00:00\n            [created] =\n 2018-01-01 00:00:00\n        )\n\n    [__info:protected] =\n Array\n        (\n            [type] =\n tasksource\n            [sys.id] =\n id\n            [sys.orig] =\n Array\n                (\n                    [id] =\n 1\n                    [name] =\n Hello World\n                    [source] =\n  cda22aa1e43992c1103a9f8a386b5dcb\n                    [type] =\n php\n                    [description] =\n My Hello World task\n                    [params] =\n \n                    [updated] =\n 2018-01-01 00:00:00\n                    [created] =\n 2018-01-01 00:00:00\n                )\n\n            [tainted] =\n \n            [changed] =\n \n            [changelist] =\n Array\n                (\n                )\n\n            [model] =\n \n        )\n\n    [beanHelper:protected] =\n RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper Object\n        (\n        )\n\n    [fetchType:protected] =\n \n    [withSql:protected] =\n \n    [withParams:protected] =\n Array\n        (\n        )\n\n    [aliasName:protected] =\n \n    [via:protected] =\n \n    [noLoad:protected] =\n \n    [all:protected] =\n \n)\n\n\n\n\n\nGet By Id\n\n\nGet a task by id.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nId of task\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\ntasks-\ngetById(1);\n\n\n\n\n\n\nResponse (RedBean Object)\n\n\nRedBeanPHP\\OODBBean Object\n(\n    [properties:protected] =\n Array\n        (\n            [id] =\n 1\n            [name] =\n Hello World\n            [source] =\n  cda22aa1e43992c1103a9f8a386b5dcb\n            [type] =\n php\n            [description] =\n My Hello World task\n            [params] =\n \n            [updated] =\n 2018-01-01 00:00:00\n            [created] =\n 2018-01-01 00:00:00\n        )\n\n    [__info:protected] =\n Array\n        (\n            [type] =\n tasksource\n            [sys.id] =\n id\n            [sys.orig] =\n Array\n                (\n                    [id] =\n 1\n                    [name] =\n Hello World\n                    [source] =\n  cda22aa1e43992c1103a9f8a386b5dcb\n                    [type] =\n php\n                    [description] =\n My Hello World task\n                    [params] =\n \n                    [updated] =\n 2018-01-01 00:00:00\n                    [created] =\n 2018-01-01 00:00:00\n                )\n\n            [tainted] =\n \n            [changed] =\n \n            [changelist] =\n Array\n                (\n                )\n\n            [model] =\n \n        )\n\n    [beanHelper:protected] =\n RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper Object\n        (\n        )\n\n    [fetchType:protected] =\n \n    [withSql:protected] =\n \n    [withParams:protected] =\n Array\n        (\n        )\n\n    [aliasName:protected] =\n \n    [via:protected] =\n \n    [noLoad:protected] =\n \n    [all:protected] =\n \n)\n\n\n\n\n\nGet Task Sources\n\n\nGet all tasks.\n\n\nCall\n\n\n$client-\ntasks-\ngetTaskSources();\n\n\n\n\n\n\nResponse (RedBean Object)\n\n\nArray\n(\n    [1] =\n RedBeanPHP\\OODBBean Object\n        (\n            [properties:protected] =\n Array\n                (\n                    [id] =\n 1\n                    [name] =\n Hello World\n                    [source] =\n  cda22aa1e43992c1103a9f8a386b5dcb\n                    [type] =\n php\n                    [description] =\n My Hello World task\n                    [params] =\n \n                    [updated] =\n 2018-01-01 00:00:00\n                    [created] =\n 2018-01-01 00:00:00\n                )\n\n            [__info:protected] =\n Array\n                (\n                    [type] =\n tasksource\n                    [sys.id] =\n id\n                    [sys.orig] =\n Array\n                        (\n                            [id] =\n 1\n                            [name] =\n Hello World\n                            [source] =\n  cda22aa1e43992c1103a9f8a386b5dcb\n                            [type] =\n php\n                            [description] =\n My Hello World task\n                            [params] =\n \n                            [updated] =\n 2018-01-01 00:00:00\n                            [created] =\n 2018-01-01 00:00:00\n                        )\n\n                    [tainted] =\n \n                    [changed] =\n \n                    [changelist] =\n Array\n                        (\n                        )\n\n                    [model] =\n \n                )\n\n            [beanHelper:protected] =\n RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper Object\n                (\n                )\n\n            [fetchType:protected] =\n \n            [withSql:protected] =\n \n            [withParams:protected] =\n Array\n                (\n                )\n\n            [aliasName:protected] =\n \n            [via:protected] =\n \n            [noLoad:protected] =\n \n            [all:protected] =\n \n        )\n    )\n)\n\n\n\n\n\nStatus\n\n\nGet the status of a task.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nName of task\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\ntasks-\nstatus(\nHello World\n);\n\n\n\n\n\n\nResponse\n\n\nrunning\n\n\n\n\n\nRun Count\n\n\nGet the run count of a particular task.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nName of task\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\ntasks-\nrunCount(\nHello World\n);\n\n\n\n\n\n\nResponse\n\n\n100\n\n\n\n\n\nRemove\n\n\nRemove a task by its name.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nName of task\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\ntasks-\nremove(\nHello World\n);\n\n\n\n\n\n\nResponse\n\n\ntrue\n\n\n\n\n\nRemove By Id\n\n\nRemove a task by its id.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nId of task\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\ntasks-\nremoveById(1);\n\n\n\n\n\n\nResponse\n\n\ntrue\n\n\n\n\n\nGet Tasks Log\n\n\nTask logs are entries created, when a task is run. Use this method to get the data.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ntasksource_id\n\n\nint\n\n\nThe id of the task source (optional)\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$result = $client-\ntasks-\ngetTasksLog();\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [1] =\n RedBeanPHP\\OODBBean Object\n        (\n            [properties:protected] =\n Array\n                (\n                    [id] =\n 1\n                    [name] =\n Hello World\n                    [params] =\n []\n                    [repeats] =\n 1\n                    [completed] =\n 0\n                    [sleep] =\n 1\n                    [tasksource_id] =\n 1\n                    [run_last] =\n 2018-01-01 00:00:00\n                    [run_next] =\n 2018-01-01 00:00:00\n                    [run_count] =\n 6\n                    [result] =\n \n                    [tasksource] =\n \n                )\n\n            [__info:protected] =\n Array\n                (\n                    [type] =\n tasks\n                    [sys.id] =\n id\n                    [sys.orig] =\n Array\n                        (\n                            [id] =\n 1\n                            [name] =\n Hello World\n                            [params] =\n []\n                            [repeats] =\n 1\n                            [completed] =\n 0\n                            [sleep] =\n 1\n                            [tasksource_id] =\n 1\n                            [run_last] =\n 2018-01-01 00:00:00\n                            [run_next] =\n 2018-01-01 00:00:00\n                            [run_count] =\n 6\n                            [result] =\n \n                            [tasksource] =\n \n                        )\n\n                    [tainted] =\n \n                    [changed] =\n \n                    [changelist] =\n Array\n                        (\n                        )\n\n                    [model] =\n \n                )\n\n            [beanHelper:protected] =\n RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper Object\n                (\n                )\n\n            [fetchType:protected] =\n \n            [withSql:protected] =\n \n            [withParams:protected] =\n Array\n                (\n                )\n\n            [aliasName:protected] =\n \n            [via:protected] =\n \n            [noLoad:protected] =\n \n            [all:protected] =\n \n        )\n    )\n)\n\n\n\n\n\nGet Tasks Log Count\n\n\nTask logs are entries created, when a task is run. Use this method to get the counts.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ntasksource_id\n\n\nint\n\n\nThe id of the task (optional)\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$result = $client-\ntasks-\ngetTasksLogCount();\n\n\n\n\n\n\nResponse\n\n\n1\n\n\n\n\n\nRemove Tasks Log\n\n\nRemove a task log from the task.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ntask_id\n\n\nint\n\n\nThe id of the task\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$result = $client-\ntasks-\nremoveTasksLog(1);\n\n\n\n\n\n\nResponse\n\n\ntrue\n\n\n\n\n\nGet Tasks\n\n\nTask logs are entries created, when a task is run. Use this method to get the data.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ntask_id\n\n\nint\n\n\nThe id of the task (optional)\n\n\n\n\n\n\n\n\n\n\nCall\n\n\n$result = $client-\ntasks-\ngetTasks();\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [1] =\n RedBeanPHP\\OODBBean Object\n        (\n            [properties:protected] =\n Array\n                (\n                    [id] =\n 1\n                    [name] =\n Hello World\n                    [params] =\n []\n                    [repeats] =\n 1\n                    [completed] =\n 0\n                    [sleep] =\n 1\n                    [tasksource_id] =\n 1\n                    [run_last] =\n 2018-01-01 00:00:00\n                    [run_next] =\n 2018-01-01 00:00:00\n                    [run_count] =\n 6\n                    [result] =\n \n                    [tasksource] =\n \n                )\n\n            [__info:protected] =\n Array\n                (\n                    [type] =\n tasks\n                    [sys.id] =\n id\n                    [sys.orig] =\n Array\n                        (\n                            [id] =\n 1\n                            [name] =\n Hello World\n                            [params] =\n []\n                            [repeats] =\n 1\n                            [completed] =\n 0\n                            [sleep] =\n 1\n                            [tasksource_id] =\n 1\n                            [run_last] =\n 2018-01-01 00:00:00\n                            [run_next] =\n 2018-01-01 00:00:00\n                            [run_count] =\n 6\n                            [result] =\n \n                            [tasksource] =\n \n                        )\n\n                    [tainted] =\n \n                    [changed] =\n \n                    [changelist] =\n Array\n                        (\n                        )\n\n                    [model] =\n \n                )\n\n            [beanHelper:protected] =\n RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper Object\n                (\n                )\n\n            [fetchType:protected] =\n \n            [withSql:protected] =\n \n            [withParams:protected] =\n Array\n                (\n                )\n\n            [aliasName:protected] =\n \n            [via:protected] =\n \n            [noLoad:protected] =\n \n            [all:protected] =\n \n        )\n    )\n)\n\n\n\n\n\nRun\n\n\nPlace task entry in tasking table for deamon to run.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nName of the task\n\n\n``\n\n\n\n\n\n\nparams\n\n\narray\n\n\nArray of values which are passed to task\n\n\n``\n\n\n\n\n\n\nsleep\n\n\nint\n\n\nSleep time between iterations, if 0 its run once\n\n\n0\n\n\n\n\n\n\n\n\nCall\n\n\n// run once\n\n\n$client-\ntasks-\nrun(\nHello World\n, [], 0);\n\n\n\n// run every day\n\n\n$client-\ntasks-\nrun(\nHello World\n, [], 86400);\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [id] =\n 1\n    [name] =\n Hello World\n    [params] =\n []\n    [repeats] =\n 1\n    [completed] =\n 0\n    [sleep] =\n 86400\n    [tasksource_id] =\n 1\n    [run_last] =\n 2018-01-01 00:00:00\n    [run_next] =\n 2018-01-01 00:00:00\n    [run_count] =\n 10\n    [result] =\n Hello World\n)\n\n\n\n\n\nRun Now\n\n\nRun a task now (task is not placed in tasking table for deamon to run), and \nrun as the web server user\n.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nName of the task\n\n\n``\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\ntasks-\nrunNow(\nHello World\n);\n\n\n\n\n\n\nResponse\n\n\nHello World\n\n\n\n\n\nClear\n\n\nDelete all tasks.\n\n\nCall\n\n\n$result = $client-\ntasks-\nclear();\n\n\n\n\n\n\nResponse\n\n\ntrue\n\n\n\n\n\nReset\n\n\nDelete database. \nUse with caution.\n\n\nCall\n\n\n$result = $client-\ntasks-\nreset();\n\n\n\n\n\n\nResponse\n\n\ntrue\n\n\n\n\n\nTesting\n\n\nThere are no tests setup for this component.\n\n\nContributing\n\n\nPlease see \nCONTRIBUTING\n for details.\n\n\nSecurity\n\n\nIf you discover any security related issues, please contact me via \nhttps://cherone.co.uk\n instead of using the issue tracker.\n\n\nCredits\n\n\n\n\nLawrence Cherone\n\n\nAll Contributors\n\n\n\n\nLinks\n\n\nWant to see an example project which uses this component?\n\n\n\n\nPlinkerUI\n\n\n\n\nDevelopment Encouragement\n\n\nIf you use this project and make money from it or want to show your appreciation,\nplease feel free to make a donation \nhttps://www.paypal.me/lcherone\n, thanks.\n\n\nSponsors\n\n\nGet your company or name listed throughout the documentation and on each github repository, contact me at \nhttps://cherone.co.uk\n for further details.\n\n\nLicense\n\n\nThe MIT License (MIT). Please see \nLicense File\n for more information.\n\n\nSee the \norganisations page\n for additional components.", 
            "title": "Tasks"
        }, 
        {
            "location": "/#tasks", 
            "text": "The tasks component allows you to write code based tasks which are completed by a daemon, \nthis could allow you to create a single interface to control a cluster of servers tasks.", 
            "title": "Tasks"
        }, 
        {
            "location": "/#install", 
            "text": "Require this package with composer using the following command:  $ composer require plinker/tasks", 
            "title": "Install"
        }, 
        {
            "location": "/#cron-daemon", 
            "text": "You should create a file which will be run via cron:  cron.php  ?php  require   vendor/autoload.php ;  if   ( php_sapi_name ()   !=   cli )   { \n     header ( HTTP/1.0 403 Forbidden ); \n     exit ( CLI script );  }  $task   =   new   Plinker\\Tasks\\Runner ([ \n     database   =   [ \n         dsn        =   sqlite:./.plinker/database.db , \n         host       =   , \n         name       =   , \n         username   =   , \n         password   =   , \n         freeze     =   false , \n         debug      =   false \n     ], \n     debug         =   true , \n     log           =   true , \n     sleep_time    =   2 , \n     tmp_path      =   ./.plinker , \n     auto_update   =   86400  ]);  $task - daemon ( Queue );   Then add a cron job:   @reboot while sleep 1; do cd /var/www/html/examples/tasks   /usr/bin/php run.php ; done", 
            "title": "CRON Daemon"
        }, 
        {
            "location": "/#client", 
            "text": "Creating a client instance is done as follows:  ?php  require   vendor/autoload.php ;  /**   * Initialize plinker client.   *   * @param string $server - URL to server listener.   * @param string $config - server secret, and/or a additional component data   */  $client   =   new   \\Plinker\\Core\\Client ( \n     http://example.com/server.php , \n     [ \n         secret   =   a secret password , \n         // database connection \n         database   =   [ \n             dsn        =   sqlite:./.plinker/database.db , \n             host       =   , \n             name       =   , \n             username   =   , \n             password   =   , \n             freeze     =   false , \n             debug      =   false , \n         ], \n         // displays output to task runner console \n         debug   =   true , \n\n         // daemon sleep time \n         sleep_time   =   1 , \n         tmp_path     =   ./.plinker \n     ]  );  // or using global function  $client   =   plinker_client ( http://example.com/server.php ,   a secret password ,   [ \n     // database connection \n     database   =   [ \n         dsn        =   sqlite:./.plinker/database.db , \n         host       =   , \n         name       =   , \n         username   =   , \n         password   =   , \n         freeze     =   false , \n         debug      =   false , \n     ], \n     // displays output to task runner console \n     debug   =   true , \n\n     // daemon sleep time \n     sleep_time   =   1 , \n     tmp_path     =   ./.plinker  ]);", 
            "title": "Client"
        }, 
        {
            "location": "/#methods", 
            "text": "Once setup, you call the class though its namespace to its method.", 
            "title": "Methods"
        }, 
        {
            "location": "/#create", 
            "text": "Create a new task, tasks with the same name will be overwritten.     Parameter  Type  Description  Default      name  string  Name of task     source  string  Task source code     type  string  Type of task (php|bash)     description  string  Description of task     params  array  Default params passed to task      Call  $client- tasks- create(       Hello World ,       ?php   echo   Hello World ; ,       php ,       My   Hello   World   task , \n     []  )   Response  Array\n(\n    [id] =  1\n    [name] =  Hello World\n    [source] =   cda22aa1e43992c1103a9f8a386b5dcb\n    [type] =  php\n    [description] =  My Hello World task\n    [params] =  \n    [updated] =  2018-01-01 00:00:00\n    [created] =  2018-01-01 00:00:00\n)", 
            "title": "Create"
        }, 
        {
            "location": "/#update", 
            "text": "Update a task.     Parameter  Type  Description  Default      id  int  Id of task     name  string  Name of task     source  string  Task source code     type  string  Type of task (php|bash)     description  string  Description of task     params  array  Default params passed to task      Call  $client- tasks- update(      1       Hello World ,       ?php   echo   Hello World - Updated ; ,       php ,       My   Hello   World   task , \n     []  )   Response  Array\n(\n    [id] =  1\n    [name] =  Hello World - Updated\n    [source] =   cda22aa1e43992c1103a9f8a386b5dcb\n    [type] =  php\n    [description] =  My Hello World task\n    [params] =  \n    [updated] =  2018-01-01 00:00:00\n    [created] =  2018-01-01 00:00:00\n)", 
            "title": "Update"
        }, 
        {
            "location": "/#get", 
            "text": "Get a task.     Parameter  Type  Description  Default      name  string  Name of task      Call  $client- tasks- get( Hello World );   Response (RedBean Object)  RedBeanPHP\\OODBBean Object\n(\n    [properties:protected] =  Array\n        (\n            [id] =  1\n            [name] =  Hello World\n            [source] =   cda22aa1e43992c1103a9f8a386b5dcb\n            [type] =  php\n            [description] =  My Hello World task\n            [params] =  \n            [updated] =  2018-01-01 00:00:00\n            [created] =  2018-01-01 00:00:00\n        )\n\n    [__info:protected] =  Array\n        (\n            [type] =  tasksource\n            [sys.id] =  id\n            [sys.orig] =  Array\n                (\n                    [id] =  1\n                    [name] =  Hello World\n                    [source] =   cda22aa1e43992c1103a9f8a386b5dcb\n                    [type] =  php\n                    [description] =  My Hello World task\n                    [params] =  \n                    [updated] =  2018-01-01 00:00:00\n                    [created] =  2018-01-01 00:00:00\n                )\n\n            [tainted] =  \n            [changed] =  \n            [changelist] =  Array\n                (\n                )\n\n            [model] =  \n        )\n\n    [beanHelper:protected] =  RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper Object\n        (\n        )\n\n    [fetchType:protected] =  \n    [withSql:protected] =  \n    [withParams:protected] =  Array\n        (\n        )\n\n    [aliasName:protected] =  \n    [via:protected] =  \n    [noLoad:protected] =  \n    [all:protected] =  \n)", 
            "title": "Get"
        }, 
        {
            "location": "/#get-by-id", 
            "text": "Get a task by id.     Parameter  Type  Description  Default      id  int  Id of task      Call  $client- tasks- getById(1);   Response (RedBean Object)  RedBeanPHP\\OODBBean Object\n(\n    [properties:protected] =  Array\n        (\n            [id] =  1\n            [name] =  Hello World\n            [source] =   cda22aa1e43992c1103a9f8a386b5dcb\n            [type] =  php\n            [description] =  My Hello World task\n            [params] =  \n            [updated] =  2018-01-01 00:00:00\n            [created] =  2018-01-01 00:00:00\n        )\n\n    [__info:protected] =  Array\n        (\n            [type] =  tasksource\n            [sys.id] =  id\n            [sys.orig] =  Array\n                (\n                    [id] =  1\n                    [name] =  Hello World\n                    [source] =   cda22aa1e43992c1103a9f8a386b5dcb\n                    [type] =  php\n                    [description] =  My Hello World task\n                    [params] =  \n                    [updated] =  2018-01-01 00:00:00\n                    [created] =  2018-01-01 00:00:00\n                )\n\n            [tainted] =  \n            [changed] =  \n            [changelist] =  Array\n                (\n                )\n\n            [model] =  \n        )\n\n    [beanHelper:protected] =  RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper Object\n        (\n        )\n\n    [fetchType:protected] =  \n    [withSql:protected] =  \n    [withParams:protected] =  Array\n        (\n        )\n\n    [aliasName:protected] =  \n    [via:protected] =  \n    [noLoad:protected] =  \n    [all:protected] =  \n)", 
            "title": "Get By Id"
        }, 
        {
            "location": "/#get-task-sources", 
            "text": "Get all tasks.  Call  $client- tasks- getTaskSources();   Response (RedBean Object)  Array\n(\n    [1] =  RedBeanPHP\\OODBBean Object\n        (\n            [properties:protected] =  Array\n                (\n                    [id] =  1\n                    [name] =  Hello World\n                    [source] =   cda22aa1e43992c1103a9f8a386b5dcb\n                    [type] =  php\n                    [description] =  My Hello World task\n                    [params] =  \n                    [updated] =  2018-01-01 00:00:00\n                    [created] =  2018-01-01 00:00:00\n                )\n\n            [__info:protected] =  Array\n                (\n                    [type] =  tasksource\n                    [sys.id] =  id\n                    [sys.orig] =  Array\n                        (\n                            [id] =  1\n                            [name] =  Hello World\n                            [source] =   cda22aa1e43992c1103a9f8a386b5dcb\n                            [type] =  php\n                            [description] =  My Hello World task\n                            [params] =  \n                            [updated] =  2018-01-01 00:00:00\n                            [created] =  2018-01-01 00:00:00\n                        )\n\n                    [tainted] =  \n                    [changed] =  \n                    [changelist] =  Array\n                        (\n                        )\n\n                    [model] =  \n                )\n\n            [beanHelper:protected] =  RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper Object\n                (\n                )\n\n            [fetchType:protected] =  \n            [withSql:protected] =  \n            [withParams:protected] =  Array\n                (\n                )\n\n            [aliasName:protected] =  \n            [via:protected] =  \n            [noLoad:protected] =  \n            [all:protected] =  \n        )\n    )\n)", 
            "title": "Get Task Sources"
        }, 
        {
            "location": "/#status", 
            "text": "Get the status of a task.     Parameter  Type  Description  Default      name  string  Name of task      Call  $client- tasks- status( Hello World );   Response  running", 
            "title": "Status"
        }, 
        {
            "location": "/#run-count", 
            "text": "Get the run count of a particular task.     Parameter  Type  Description  Default      name  string  Name of task      Call  $client- tasks- runCount( Hello World );   Response  100", 
            "title": "Run Count"
        }, 
        {
            "location": "/#remove", 
            "text": "Remove a task by its name.     Parameter  Type  Description  Default      name  string  Name of task      Call  $client- tasks- remove( Hello World );   Response  true", 
            "title": "Remove"
        }, 
        {
            "location": "/#remove-by-id", 
            "text": "Remove a task by its id.     Parameter  Type  Description  Default      id  int  Id of task      Call  $client- tasks- removeById(1);   Response  true", 
            "title": "Remove By Id"
        }, 
        {
            "location": "/#get-tasks-log", 
            "text": "Task logs are entries created, when a task is run. Use this method to get the data.     Parameter  Type  Description  Default      tasksource_id  int  The id of the task source (optional)      Call  $result = $client- tasks- getTasksLog();   Response  Array\n(\n    [1] =  RedBeanPHP\\OODBBean Object\n        (\n            [properties:protected] =  Array\n                (\n                    [id] =  1\n                    [name] =  Hello World\n                    [params] =  []\n                    [repeats] =  1\n                    [completed] =  0\n                    [sleep] =  1\n                    [tasksource_id] =  1\n                    [run_last] =  2018-01-01 00:00:00\n                    [run_next] =  2018-01-01 00:00:00\n                    [run_count] =  6\n                    [result] =  \n                    [tasksource] =  \n                )\n\n            [__info:protected] =  Array\n                (\n                    [type] =  tasks\n                    [sys.id] =  id\n                    [sys.orig] =  Array\n                        (\n                            [id] =  1\n                            [name] =  Hello World\n                            [params] =  []\n                            [repeats] =  1\n                            [completed] =  0\n                            [sleep] =  1\n                            [tasksource_id] =  1\n                            [run_last] =  2018-01-01 00:00:00\n                            [run_next] =  2018-01-01 00:00:00\n                            [run_count] =  6\n                            [result] =  \n                            [tasksource] =  \n                        )\n\n                    [tainted] =  \n                    [changed] =  \n                    [changelist] =  Array\n                        (\n                        )\n\n                    [model] =  \n                )\n\n            [beanHelper:protected] =  RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper Object\n                (\n                )\n\n            [fetchType:protected] =  \n            [withSql:protected] =  \n            [withParams:protected] =  Array\n                (\n                )\n\n            [aliasName:protected] =  \n            [via:protected] =  \n            [noLoad:protected] =  \n            [all:protected] =  \n        )\n    )\n)", 
            "title": "Get Tasks Log"
        }, 
        {
            "location": "/#get-tasks-log-count", 
            "text": "Task logs are entries created, when a task is run. Use this method to get the counts.     Parameter  Type  Description  Default      tasksource_id  int  The id of the task (optional)      Call  $result = $client- tasks- getTasksLogCount();   Response  1", 
            "title": "Get Tasks Log Count"
        }, 
        {
            "location": "/#remove-tasks-log", 
            "text": "Remove a task log from the task.     Parameter  Type  Description  Default      task_id  int  The id of the task      Call  $result = $client- tasks- removeTasksLog(1);   Response  true", 
            "title": "Remove Tasks Log"
        }, 
        {
            "location": "/#get-tasks", 
            "text": "Task logs are entries created, when a task is run. Use this method to get the data.     Parameter  Type  Description  Default      task_id  int  The id of the task (optional)      Call  $result = $client- tasks- getTasks();   Response  Array\n(\n    [1] =  RedBeanPHP\\OODBBean Object\n        (\n            [properties:protected] =  Array\n                (\n                    [id] =  1\n                    [name] =  Hello World\n                    [params] =  []\n                    [repeats] =  1\n                    [completed] =  0\n                    [sleep] =  1\n                    [tasksource_id] =  1\n                    [run_last] =  2018-01-01 00:00:00\n                    [run_next] =  2018-01-01 00:00:00\n                    [run_count] =  6\n                    [result] =  \n                    [tasksource] =  \n                )\n\n            [__info:protected] =  Array\n                (\n                    [type] =  tasks\n                    [sys.id] =  id\n                    [sys.orig] =  Array\n                        (\n                            [id] =  1\n                            [name] =  Hello World\n                            [params] =  []\n                            [repeats] =  1\n                            [completed] =  0\n                            [sleep] =  1\n                            [tasksource_id] =  1\n                            [run_last] =  2018-01-01 00:00:00\n                            [run_next] =  2018-01-01 00:00:00\n                            [run_count] =  6\n                            [result] =  \n                            [tasksource] =  \n                        )\n\n                    [tainted] =  \n                    [changed] =  \n                    [changelist] =  Array\n                        (\n                        )\n\n                    [model] =  \n                )\n\n            [beanHelper:protected] =  RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper Object\n                (\n                )\n\n            [fetchType:protected] =  \n            [withSql:protected] =  \n            [withParams:protected] =  Array\n                (\n                )\n\n            [aliasName:protected] =  \n            [via:protected] =  \n            [noLoad:protected] =  \n            [all:protected] =  \n        )\n    )\n)", 
            "title": "Get Tasks"
        }, 
        {
            "location": "/#run", 
            "text": "Place task entry in tasking table for deamon to run.     Parameter  Type  Description  Default      name  string  Name of the task  ``    params  array  Array of values which are passed to task  ``    sleep  int  Sleep time between iterations, if 0 its run once  0     Call  // run once  $client- tasks- run( Hello World , [], 0);  // run every day  $client- tasks- run( Hello World , [], 86400);   Response  Array\n(\n    [id] =  1\n    [name] =  Hello World\n    [params] =  []\n    [repeats] =  1\n    [completed] =  0\n    [sleep] =  86400\n    [tasksource_id] =  1\n    [run_last] =  2018-01-01 00:00:00\n    [run_next] =  2018-01-01 00:00:00\n    [run_count] =  10\n    [result] =  Hello World\n)", 
            "title": "Run"
        }, 
        {
            "location": "/#run-now", 
            "text": "Run a task now (task is not placed in tasking table for deamon to run), and  run as the web server user .     Parameter  Type  Description  Default      name  string  Name of the task  ``     Call  $client- tasks- runNow( Hello World );   Response  Hello World", 
            "title": "Run Now"
        }, 
        {
            "location": "/#clear", 
            "text": "Delete all tasks.  Call  $result = $client- tasks- clear();   Response  true", 
            "title": "Clear"
        }, 
        {
            "location": "/#reset", 
            "text": "Delete database.  Use with caution.  Call  $result = $client- tasks- reset();   Response  true", 
            "title": "Reset"
        }, 
        {
            "location": "/#testing", 
            "text": "There are no tests setup for this component.", 
            "title": "Testing"
        }, 
        {
            "location": "/#contributing", 
            "text": "Please see  CONTRIBUTING  for details.", 
            "title": "Contributing"
        }, 
        {
            "location": "/#security", 
            "text": "If you discover any security related issues, please contact me via  https://cherone.co.uk  instead of using the issue tracker.", 
            "title": "Security"
        }, 
        {
            "location": "/#credits", 
            "text": "Lawrence Cherone  All Contributors", 
            "title": "Credits"
        }, 
        {
            "location": "/#links", 
            "text": "Want to see an example project which uses this component?   PlinkerUI", 
            "title": "Links"
        }, 
        {
            "location": "/#development-encouragement", 
            "text": "If you use this project and make money from it or want to show your appreciation,\nplease feel free to make a donation  https://www.paypal.me/lcherone , thanks.", 
            "title": "Development Encouragement"
        }, 
        {
            "location": "/#sponsors", 
            "text": "Get your company or name listed throughout the documentation and on each github repository, contact me at  https://cherone.co.uk  for further details.", 
            "title": "Sponsors"
        }, 
        {
            "location": "/#license", 
            "text": "The MIT License (MIT). Please see  License File  for more information.  See the  organisations page  for additional components.", 
            "title": "License"
        }
    ]
}